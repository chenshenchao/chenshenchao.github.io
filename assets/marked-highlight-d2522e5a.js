function y(e){if(typeof e=="function"&&(e={highlight:e}),!e||typeof e.highlight!="function")throw new Error("Must provide highlight function");return typeof e.langPrefix!="string"&&(e.langPrefix="language-"),{async:!!e.async,walkTokens(t){if(t.type!=="code")return;const n=u(t);if(e.async)return Promise.resolve(e.highlight(t.text,n)).then(a(t));const r=e.highlight(t.text,n);if(r instanceof Promise)throw new Error("markedHighlight is not set to async but the highlight function is async. Set the async option to true on markedHighlight to await the async highlight function.");a(t)(r)},renderer:{code(t,n,r){const c=(n||"").match(/\S*/)[0],f=c?` class="${e.langPrefix}${g(c)}"`:"";return t=t.replace(/\n$/,""),`<pre><code${f}>${r?t:g(t,!0)}
</code></pre>`}}}}function u(e){return(e.lang||"").match(/\S*/)[0]}function a(e){return t=>{typeof t=="string"&&t!==e.text&&(e.escaped=!0,e.text=t)}}const s=/[&<>"']/,l=new RegExp(s.source,"g"),h=/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,o=new RegExp(h.source,"g"),p={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},i=e=>p[e];function g(e,t){if(t){if(s.test(e))return e.replace(l,i)}else if(h.test(e))return e.replace(o,i);return e}export{y as m};
